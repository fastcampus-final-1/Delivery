plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.diffplug.spotless' version '6.11.0'
	id "it.nicolasfarabegoli.conventional-commits" version "3.1.3" // 커밋 컨벤션 강제 플러그인

}

group = 'com.delivery'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//spring
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//db
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//redis
	implementation 'org.redisson:redisson-spring-boot-starter:3.31.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}

tasks.named('test') {
	useJUnitPlatform()
}

// git hook 설정
spotless {
	java {
		target("src/main/java/**/*.java")
		googleJavaFormat().aosp()
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
		formatAnnotations()
	}
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	options.compilerArgs += '-parameters'
}

tasks.register('updateGitHooks', Copy) {
	from('./scripts/pre-commit') {
		rename 'pre-commit', 'pre-commit'
	}
	into('.git/hooks')
	fileMode 0775

	doFirst {
		file('.git/hooks').mkdirs()
	}
}
compileJava.dependsOn updateGitHooks